name: Build

on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - 'main'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write


# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: Export Game Job
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          fetch-depth: 0

      - name: Setup nuget
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: 'latest'

      - name: Restore packages with nuget
        run: |
          nuget sources add -Name github -Source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -UserName ${{ github.repository_owner }} -Password ${{secrets.GITHUB_TOKEN}}
          nuget restore "./src/Isometric Game.sln"

      - name: Export game
        uses: firebelley/godot-export@v3.0.0
        with:
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/3.4.2/mono/Godot_v3.4.2-stable_mono_linux_headless_64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/3.4.2/mono/Godot_v3.4.2-stable_mono_export_templates.tpz
          relative_project_path: ./src/
          relative_export_path: ./build/
          create_release: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./build/HTML5

  deploy:
    needs: build
    name: Deploy to github pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1